<?xml version="1.0" encoding="UTF-8"?>
<database name="scims" defaultIdMethod="native" namespace="SciMS\Models">
  <table name="user" phpName="User">
    <column name="id" type="integer" required="true" primaryKey="true" autoIncrement="true" />
    <column name="uid" type="varchar" size="16" required="true" />
    <column name="email" type="varchar" size="254" required="true" primaryKey="true" />
    <column name="first_name" type="varchar" size="128" required="true" />
    <column name="last_name" type="varchar" size="128" required="true" />
    <column name="password" type="varchar" size="255" required="true" />
    <column name="token" type="varchar" size="255" required="false" />
    <column name="token_expiration" type="integer" size="8" required="false" />

    <behavior name="validate">
      <parameter name="email_invalid" value="{column: email, validator: Email, options: {message: INVALID_EMAIL}}" />
      <parameter name="email_already_exists" value="{column: email, validator: Unique, options: {message: EMAIL_ALREADY_EXISTS}}" />
      <parameter name="first_name" value="{column: first_name, validator: NotNull, options: {message: INVALID_FIRST_NAME}}" />
      <parameter name="last_name" value="{column: last_name, validator: NotNull, options: {message: INVALID_LAST_NAME}}" />
      <parameter name="password" value="{column: password, validator: NotNull, options: {message: INVALID_PASSWORD}}" />
    </behavior>
  </table>

  <table name="article" phpName="Article">
    <column name="id" type="integer" required="true" primaryKey="true" autoIncrement="true" />
    <column name="user_id" type="integer" required="true" />
    <column name="title" type="varchar" size="128" required="true" />
    <column name="content" type="longvarchar" required="true" />
    <column name="publication_date" type="integer" required="true" />

    <foreign-key foreignTable="user">
      <reference local="user_id" foreign="id" />
    </foreign-key>

    <behavior name="validate">
      <parameter name="title_invalid" value="{column: title, validator: NotNull, options: {message: INVALID_TITLE}}" />
      <parameter name="content_invalid" value="{column: content, validator: NotNull, options: {message: INVALID_CONTENT}}" />
    </behavior>
  </table>
</database>
